<?xml version="1.0" ?>
<testsuite errors="41" failures="0" name="InequalityTest-20160317162337" tests="51" time="33.760">
	<testcase classname="InequalityTest" name="test_fpFractionTest_1" time="0.628"/>
	<testcase classname="InequalityTest" name="test_fpFractionTest_12" time="0.622"/>
	<testcase classname="InequalityTest" name="test_fpFractionTest_2" time="0.636"/>
	<testcase classname="InequalityTest" name="test_fpFractionTest_3" time="0.623"/>
	<testcase classname="InequalityTest" name="test_fpFractionTest_4" time="0.632"/>
	<testcase classname="InequalityTest" name="test_fpFractionTest_5" time="0.609"/>
	<testcase classname="InequalityTest" name="test_fpFractionTest_6" time="0.619"/>
	<testcase classname="InequalityTest" name="test_fpFractionTest_7" time="0.621"/>
	<testcase classname="InequalityTest" name="test_fpFractionTest_8" time="0.610"/>
	<testcase classname="InequalityTest" name="test_fpFractionTest_9" time="0.651"/>
	<testcase classname="InequalityTest" name="test_csFractionTest_1" time="0.638">
		<error message="' a c[29 chars]tion 1/8 consists of an integer numerator disp[16 chars]ne  ' != ' a c[29 chars]tion #f  consists of an integer numerator disp[16 chars]ne  '
-  a common  vulgar  or simple fraction 1/8 consists of an integer numerator displayed above a line  
?                                       ^^^
+  a common  vulgar  or simple fraction #f  consists of an integer numerator displayed above a line  
?                                       ^^^
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 28, in test_csFractionTest_1
    self.assertEqual(Actuval, expected)
AssertionError: ' a c[29 chars]tion 1/8 consists of an integer numerator disp[16 chars]ne  ' != ' a c[29 chars]tion #f  consists of an integer numerator disp[16 chars]ne  '
-  a common  vulgar  or simple fraction 1/8 consists of an integer numerator displayed above a line  
?                                       ^^^
+  a common  vulgar  or simple fraction #f  consists of an integer numerator displayed above a line  
?                                       ^^^

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_csFractionTest_2" time="0.641">
		<error message="' the picture to the right illustrates frac 3/4 of a cake  ' != ' the picture to the right illustrates frac #f  of a cake  '
-  the picture to the right illustrates frac 3/4 of a cake  
?                                            ^^^
+  the picture to the right illustrates frac #f  of a cake  
?                                            ^^^
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 34, in test_csFractionTest_2
    self.assertEqual(Actuval, expected)
AssertionError: ' the picture to the right illustrates frac 3/4 of a cake  ' != ' the picture to the right illustrates frac #f  of a cake  '
-  the picture to the right illustrates frac 3/4 of a cake  
?                                            ^^^
+  the picture to the right illustrates frac #f  of a cake  
?                                            ^^^

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_csFractionTest_3" time="0.659">
		<error message="' uni[32 chars]d using negative exponents  as in which represents 1/2 and #  ' != ' uni[32 chars]d using negative exponents  as in which represents #f  and 2  '
-  unit fractions can also be expressed using negative exponents  as in which represents 1/2 and #  
?                                                                                        ^^^     ^
+  unit fractions can also be expressed using negative exponents  as in which represents #f  and 2  
?                                                                                        ^^^     ^
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 40, in test_csFractionTest_3
    self.assertEqual(Actuval, expected)
AssertionError: ' uni[32 chars]d using negative exponents  as in which represents 1/2 and #  ' != ' uni[32 chars]d using negative exponents  as in which represents #f  and 2  '
-  unit fractions can also be expressed using negative exponents  as in which represents 1/2 and #  
?                                                                                        ^^^     ^
+  unit fractions can also be expressed using negative exponents  as in which represents #f  and 2  
?                                                                                        ^^^     ^

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_csFractionTest_4" time="0.641">
		<error message="' sol[27 chars]12   4/16 will solve the fraction for x for eq[23 chars]es. ' != ' sol[27 chars]12   #f   will solve the fraction for x for eq[23 chars]es. '
-  solve for unknown x such as x/12   4/16 will solve the fraction for x for equalities and inequalities. 
?                                     ^^^^
+  solve for unknown x such as x/12   #f   will solve the fraction for x for equalities and inequalities. 
?                                     ^^^^
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 46, in test_csFractionTest_4
    self.assertEqual(Actuval, expected)
AssertionError: ' sol[27 chars]12   4/16 will solve the fraction for x for eq[23 chars]es. ' != ' sol[27 chars]12   #f   will solve the fraction for x for eq[23 chars]es. '
-  solve for unknown x such as x/12   4/16 will solve the fraction for x for equalities and inequalities. 
?                                     ^^^^
+  solve for unknown x such as x/12   #f   will solve the fraction for x for equalities and inequalities. 
?                                     ^^^^

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_csFractionTest_5" time="0.680">
		<error message="&quot; it [17 chars]iply #  by 3/16 than to do the same calculatio[39 chars]nt  &quot; != &quot; it [17 chars]iply 16 by #f   than to do the same calculatio[39 chars]nt  &quot;
-  it is easier to multiply #  by 3/16 than to do the same calculation using the fraction's decimal equivalent  
?                           ^^    ^^^^
+  it is easier to multiply 16 by #f   than to do the same calculation using the fraction's decimal equivalent  
?                           ^^    ^^^^
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 52, in test_csFractionTest_5
    self.assertEqual(Actuval, expected)
AssertionError: " it [17 chars]iply #  by 3/16 than to do the same calculatio[39 chars]nt  " != " it [17 chars]iply 16 by #f   than to do the same calculatio[39 chars]nt  "
-  it is easier to multiply #  by 3/16 than to do the same calculation using the fraction's decimal equivalent  
?                           ^^    ^^^^
+  it is easier to multiply 16 by #f   than to do the same calculation using the fraction's decimal equivalent  
?                           ^^    ^^^^

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_csFractionTest_6" time="0.637">
		<error message="' in contrast  3/8 is in lowest terms the only positive [45 chars] #  ' != ' in contrast  #f  is in lowest terms the only positive [45 chars] 1  '
-  in contrast  3/8 is in lowest terms the only positive integer that goes into both 3 and 8 evenly is #  
?               ^^^                                                                                    ^
+  in contrast  #f  is in lowest terms the only positive integer that goes into both 3 and 8 evenly is 1  
?               ^^^                                                                                    ^
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 58, in test_csFractionTest_6
    self.assertEqual(Actuval, expected)
AssertionError: ' in contrast  3/8 is in lowest terms the only positive [45 chars] #  ' != ' in contrast  #f  is in lowest terms the only positive [45 chars] 1  '
-  in contrast  3/8 is in lowest terms the only positive integer that goes into both 3 and 8 evenly is #  
?               ^^^                                                                                    ^
+  in contrast  #f  is in lowest terms the only positive integer that goes into both 3 and 8 evenly is 1  
?               ^^^                                                                                    ^

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_csFractionTest_7" time="0.632">
		<error message="' divide the numerator by the denominator in the example  11/4 divide #  by #  ' != ' divide the numerator by the denominator in the example  #f   divide 11 by 4  '
-  divide the numerator by the denominator in the example  11/4 divide #  by #  
?                                                          ^^^^        ^^    ^
+  divide the numerator by the denominator in the example  #f   divide 11 by 4  
?                                                          ^^^^        ^^    ^
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 64, in test_csFractionTest_7
    self.assertEqual(Actuval, expected)
AssertionError: ' divide the numerator by the denominator in the example  11/4 divide #  by #  ' != ' divide the numerator by the denominator in the example  #f   divide 11 by 4  '
-  divide the numerator by the denominator in the example  11/4 divide #  by #  
?                                                          ^^^^        ^^    ^
+  divide the numerator by the denominator in the example  #f   divide 11 by 4  
?                                                          ^^^^        ^^    ^

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_csFractionTest_8" time="0.636">
		<error message="' the fraction 7/7 is an improper fraction  ' != ' the fraction #f  is an improper fraction  '
-  the fraction 7/7 is an improper fraction  
?               ^^^
+  the fraction #f  is an improper fraction  
?               ^^^
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 70, in test_csFractionTest_8
    self.assertEqual(Actuval, expected)
AssertionError: ' the fraction 7/7 is an improper fraction  ' != ' the fraction #f  is an improper fraction  '
-  the fraction 7/7 is an improper fraction  
?               ^^^
+  the fraction #f  is an improper fraction  
?               ^^^

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_fFractionTest_1" time="0.620">
		<error message="' as with other fractions  the denominator 3/17 ' != ' as with other fractions  the denominator #f   '
-  as with other fractions  the denominator 3/17 
?                                           ^^^^
+  as with other fractions  the denominator #f   
?                                           ^^^^
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 126, in test_fFractionTest_1
    self.assertEqual(Actuval, expected)
AssertionError: ' as with other fractions  the denominator 3/17 ' != ' as with other fractions  the denominator #f   '
-  as with other fractions  the denominator 3/17 
?                                           ^^^^
+  as with other fractions  the denominator #f   
?                                           ^^^^

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_fFractionTest_2" time="0.622">
		<error message="' greater than #   or less than zero are treated in the same way  e.g. 27/100 ' != ' greater than 100 or less than zero are treated in the same way  e.g. #f     '
-  greater than #   or less than zero are treated in the same way  e.g. 27/100 
?               ^^^                                                     ^^^^^^
+  greater than 100 or less than zero are treated in the same way  e.g. #f     
?               ^^^                                                     ^^^^^^
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 132, in test_fFractionTest_2
    self.assertEqual(Actuval, expected)
AssertionError: ' greater than #   or less than zero are treated in the same way  e.g. 27/100 ' != ' greater than 100 or less than zero are treated in the same way  e.g. #f     '
-  greater than #   or less than zero are treated in the same way  e.g. 27/100 
?               ^^^                                                     ^^^^^^
+  greater than 100 or less than zero are treated in the same way  e.g. #f     
?               ^^^                                                     ^^^^^^

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_fFractionTest_3" time="0.638">
		<error message="' rendered as three fifths and 5/32 as five thirty-seconds ' != ' rendered as three fifths and #f   as five thirty-seconds '
-  rendered as three fifths and 5/32 as five thirty-seconds 
?                               ^^^^
+  rendered as three fifths and #f   as five thirty-seconds 
?                               ^^^^
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 138, in test_fFractionTest_3
    self.assertEqual(Actuval, expected)
AssertionError: ' rendered as three fifths and 5/32 as five thirty-seconds ' != ' rendered as three fifths and #f   as five thirty-seconds '
-  rendered as three fifths and 5/32 as five thirty-seconds 
?                               ^^^^
+  rendered as three fifths and #f   as five thirty-seconds 
?                               ^^^^

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_fFractionTest_4" time="0.658">
		<error message="' natural number part and 2/5 is the proper fraction part ' != ' natural number part and #f  is the proper fraction part '
-  natural number part and 2/5 is the proper fraction part 
?                          ^^^
+  natural number part and #f  is the proper fraction part 
?                          ^^^
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 144, in test_fFractionTest_4
    self.assertEqual(Actuval, expected)
AssertionError: ' natural number part and 2/5 is the proper fraction part ' != ' natural number part and #f  is the proper fraction part '
-  natural number part and 2/5 is the proper fraction part 
?                          ^^^
+  natural number part and #f  is the proper fraction part 
?                          ^^^

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_fFractionTest_5" time="0.669">
		<error message="' number such as 1 1/2 is a mixed number ' != ' number such as 1 #f  is a mixed number '
-  number such as 1 1/2 is a mixed number 
?                   ^^^
+  number such as 1 #f  is a mixed number 
?                   ^^^
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 150, in test_fFractionTest_5
    self.assertEqual(Actuval, expected)
AssertionError: ' number such as 1 1/2 is a mixed number ' != ' number such as 1 #f  is a mixed number '
-  number such as 1 1/2 is a mixed number 
?                   ^^^
+  number such as 1 #f  is a mixed number 
?                   ^^^

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_fFractionTest_6" time="0.677">
		<error message="' sol[27 chars]12   4/16 will solve the fraction for x for eq[22 chars]ies ' != ' sol[27 chars]12   #f   will solve the fraction for x for eq[22 chars]ies '
-  solve for unknown x such as x/12   4/16 will solve the fraction for x for equalities and inequalities 
?                                     ^^^^
+  solve for unknown x such as x/12   #f   will solve the fraction for x for equalities and inequalities 
?                                     ^^^^
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 156, in test_fFractionTest_6
    self.assertEqual(Actuval, expected)
AssertionError: ' sol[27 chars]12   4/16 will solve the fraction for x for eq[22 chars]ies ' != ' sol[27 chars]12   #f   will solve the fraction for x for eq[22 chars]ies '
-  solve for unknown x such as x/12   4/16 will solve the fraction for x for equalities and inequalities 
?                                     ^^^^
+  solve for unknown x such as x/12   #f   will solve the fraction for x for equalities and inequalities 
?                                     ^^^^

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_fpFractionTest_10" time="0.623">
		<error message="' late here is a file for 12/08  forwarded by #n      k allen ' != ' late here is a file for 12/08  forwarded by phillip k allen '
-  late here is a file for 12/08  forwarded by #n      k allen 
?                                              ^^^^^^^
+  late here is a file for 12/08  forwarded by phillip k allen 
?                                              ^^^^^^^
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 298, in test_fpFractionTest_10
    self.assertEqual(Actuval, expected)
AssertionError: ' late here is a file for 12/08  forwarded by #n      k allen ' != ' late here is a file for 12/08  forwarded by phillip k allen '
-  late here is a file for 12/08  forwarded by #n      k allen 
?                                              ^^^^^^^
+  late here is a file for 12/08  forwarded by phillip k allen 
?                                              ^^^^^^^

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_fpFractionTest_11" time="0.640">
		<error message="' at [28 chars]0 to the #n  nymex.  however  since dec nymex is a syncopated ' != ' at [28 chars]0 to the nov nymex.  however  since dec nymex is a syncopated '
-  at was a syncopated basis of 0/0 to the #n  nymex.  however  since dec nymex is a syncopated 
?                                          - ^
+  at was a syncopated basis of 0/0 to the nov nymex.  however  since dec nymex is a syncopated 
?                                           ^^
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 304, in test_fpFractionTest_11
    self.assertEqual(Actuval, expected)
AssertionError: ' at [28 chars]0 to the #n  nymex.  however  since dec nymex is a syncopated ' != ' at [28 chars]0 to the nov nymex.  however  since dec nymex is a syncopated '
-  at was a syncopated basis of 0/0 to the #n  nymex.  however  since dec nymex is a syncopated 
?                                          - ^
+  at was a syncopated basis of 0/0 to the nov nymex.  however  since dec nymex is a syncopated 
?                                           ^^

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_fpFractionTest_13" time="0.636">
		<error message="' what is the answer to # 9ths divided by # 3rd ' != ' what is the answer to 2 9ths divided by 1 3rd '
-  what is the answer to # 9ths divided by # 3rd 
?                        ^                 ^
+  what is the answer to 2 9ths divided by 1 3rd 
?                        ^                 ^
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 316, in test_fpFractionTest_13
    self.assertEqual(Actuval, expected)
AssertionError: ' what is the answer to # 9ths divided by # 3rd ' != ' what is the answer to 2 9ths divided by 1 3rd '
-  what is the answer to # 9ths divided by # 3rd 
?                        ^                 ^
+  what is the answer to 2 9ths divided by 1 3rd 
?                        ^                 ^

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_fpFractionTest_14" time="0.672">
		<error message="' if you divide # by 2, the answer is 2.5 ' != ' if you divide 5 by 2  the answer is 2.5 '
-  if you divide # by 2, the answer is 2.5 
?                ^     ^
+  if you divide 5 by 2  the answer is 2.5 
?                ^     ^
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 322, in test_fpFractionTest_14
    self.assertEqual(Actuval, expected)
AssertionError: ' if you divide # by 2, the answer is 2.5 ' != ' if you divide 5 by 2  the answer is 2.5 '
-  if you divide # by 2, the answer is 2.5 
?                ^     ^
+  if you divide 5 by 2  the answer is 2.5 
?                ^     ^

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_fpFractionTest_15" time="1.278">
		<error message="&quot; # divided by two thirds. i'm not sure that i agree &quot; != &quot; 1 divided by two thirds. i'm not sure that i agree &quot;
-  # divided by two thirds. i'm not sure that i agree 
?  ^
+  1 divided by two thirds. i'm not sure that i agree 
?  ^
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 328, in test_fpFractionTest_15
    self.assertEqual(Actuval, expected)
AssertionError: " # divided by two thirds. i'm not sure that i agree " != " 1 divided by two thirds. i'm not sure that i agree "
-  # divided by two thirds. i'm not sure that i agree 
?  ^
+  1 divided by two thirds. i'm not sure that i agree 
?  ^

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_iFractionTest_1" time="0.641">
		<error message="' 1/100 ' != ' #f    '
-  1/100 
+  #f    
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 77, in test_iFractionTest_1
    self.assertEqual(Actuval, expected)
AssertionError: ' 1/100 ' != ' #f    '
-  1/100 
+  #f    

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_iFractionTest_2" time="0.628">
		<error message="' 5/32 ' != ' #f   '
-  5/32 
+  #f   
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 83, in test_iFractionTest_2
    self.assertEqual(Actuval, expected)
AssertionError: ' 5/32 ' != ' #f   '
-  5/32 
+  #f   

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_iFractionTest_3" time="0.622">
		<error message="' 12/3 ' != ' #f   '
-  12/3 
+  #f   
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 89, in test_iFractionTest_3
    self.assertEqual(Actuval, expected)
AssertionError: ' 12/3 ' != ' #f   '
-  12/3 
+  #f   

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_iFractionTest_4" time="0.613">
		<error message="' 30/20 ' != ' #f    '
-  30/20 
+  #f    
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 95, in test_iFractionTest_4
    self.assertEqual(Actuval, expected)
AssertionError: ' 30/20 ' != ' #f    '
-  30/20 
+  #f    

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_iFractionTest_5" time="0.611">
		<error message="' 1/100 ' != ' #f    '
-  1/100 
+  #f    
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 101, in test_iFractionTest_5
    self.assertEqual(Actuval, expected)
AssertionError: ' 1/100 ' != ' #f    '
-  1/100 
+  #f    

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_iFractionTest_6" time="0.622">
		<error message="' 6/9 ' != ' #f  '
-  6/9 
+  #f  
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 107, in test_iFractionTest_6
    self.assertEqual(Actuval, expected)
AssertionError: ' 6/9 ' != ' #f  '
-  6/9 
+  #f  

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_iFractionTest_7" time="0.623">
		<error message="' 4/9 ' != ' #f  '
-  4/9 
+  #f  
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 113, in test_iFractionTest_7
    self.assertEqual(Actuval, expected)
AssertionError: ' 4/9 ' != ' #f  '
-  4/9 
+  #f  

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_iFractionTest_8" time="0.604">
		<error message="' 1/1 ' != ' #f  '
-  1/1 
+  #f  
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 119, in test_iFractionTest_8
    self.assertEqual(Actuval, expected)
AssertionError: ' 1/1 ' != ' #f  '
-  1/1 
+  #f  

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_mcFractionTest_1" time="0.622">
		<error message="' can[19 chars] to  1/2  are equivalent fractions they are al[14 chars]ue  ' != ' can[19 chars] to  #f   are equivalent fractions  they are a[15 chars]ue  '
-  can both be simplified to  1/2  are equivalent fractions they are all the same value  
?                             ^^^
+  can both be simplified to  #f   are equivalent fractions  they are all the same value  
?                             ^^^                           +
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 206, in test_mcFractionTest_1
    self.assertEqual(Actuval, expected)
AssertionError: ' can[19 chars] to  1/2  are equivalent fractions they are al[14 chars]ue  ' != ' can[19 chars] to  #f   are equivalent fractions  they are a[15 chars]ue  '
-  can both be simplified to  1/2  are equivalent fractions they are all the same value  
?                             ^^^
+  can both be simplified to  #f   are equivalent fractions  they are all the same value  
?                             ^^^                           +

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_mcFractionTest_2" time="0.658">
		<error message="' you[40 chars]ay   3/4  you can multiply the numerator and d[27 chars]er  ' != ' you[40 chars]ay   #f   you can multiply the numerator and d[27 chars]er  '
-  you want to find equivalent fractions to  say   3/4  you can multiply the numerator and denominator by the same number  
?                                                  ^^^
+  you want to find equivalent fractions to  say   #f   you can multiply the numerator and denominator by the same number  
?                                                  ^^^
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 212, in test_mcFractionTest_2
    self.assertEqual(Actuval, expected)
AssertionError: ' you[40 chars]ay   3/4  you can multiply the numerator and d[27 chars]er  ' != ' you[40 chars]ay   #f   you can multiply the numerator and d[27 chars]er  '
-  you want to find equivalent fractions to  say   3/4  you can multiply the numerator and denominator by the same number  
?                                                  ^^^
+  you want to find equivalent fractions to  say   #f   you can multiply the numerator and denominator by the same number  
?                                                  ^^^

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_mcFractionTest_3" time="0.625">
		<error message="' reducing this fraction we get  1/12   ' != ' reducing this fraction we get  #f     '
-  reducing this fraction we get  1/12   
?                                 ^^^^
+  reducing this fraction we get  #f     
?                                 ^^^^
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 218, in test_mcFractionTest_3
    self.assertEqual(Actuval, expected)
AssertionError: ' reducing this fraction we get  1/12   ' != ' reducing this fraction we get  #f     '
-  reducing this fraction we get  1/12   
?                                 ^^^^
+  reducing this fraction we get  #f     
?                                 ^^^^

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_mcFractionTest_4" time="0.624">
		<error message="' a fraction is a part of a whole  like one half  1/2   ' != ' a fraction is a part of a whole  like one half  #f    '
-  a fraction is a part of a whole  like one half  1/2   
?                                                  ^^^
+  a fraction is a part of a whole  like one half  #f    
?                                                  ^^^
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 224, in test_mcFractionTest_4
    self.assertEqual(Actuval, expected)
AssertionError: ' a fraction is a part of a whole  like one half  1/2   ' != ' a fraction is a part of a whole  like one half  #f    '
-  a fraction is a part of a whole  like one half  1/2   
?                                                  ^^^
+  a fraction is a part of a whole  like one half  #f    
?                                                  ^^^

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_mcFractionTest_5" time="0.639">
		<error message="' cir[29 chars]shaded part equivalent to the given fraction  for 1/2  and #  ' != ' cir[29 chars]shaded part equivalent to the given fraction  for #f   and 4  '
-  circle every picture that has a shaded part equivalent to the given fraction  for 1/2  and #  
?                                                                                    ^^^      ^
+  circle every picture that has a shaded part equivalent to the given fraction  for #f   and 4  
?                                                                                    ^^^      ^
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 230, in test_mcFractionTest_5
    self.assertEqual(Actuval, expected)
AssertionError: ' cir[29 chars]shaded part equivalent to the given fraction  for 1/2  and #  ' != ' cir[29 chars]shaded part equivalent to the given fraction  for #f   and 4  '
-  circle every picture that has a shaded part equivalent to the given fraction  for 1/2  and #  
?                                                                                    ^^^      ^
+  circle every picture that has a shaded part equivalent to the given fraction  for #f   and 4  
?                                                                                    ^^^      ^

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_ncPhoneNumberTest_1" time="0.659">
		<error message="&quot; you've searched business 415-456-4121 100 bayo vista way in san rafae. &quot; != &quot; you've searched business #h           100 bayo vista way in san rafae. &quot;
-  you've searched business 415-456-4121 100 bayo vista way in san rafae. 
?                           ^^^^^^^^^^^^
+  you've searched business #h           100 bayo vista way in san rafae. 
?                           ^^^^^^^^^^^^
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 335, in test_ncPhoneNumberTest_1
    self.assertEqual(Actuval, expected)
AssertionError: " you've searched business 415-456-4121 100 bayo vista way in san rafae. " != " you've searched business #h           100 bayo vista way in san rafae. "
-  you've searched business 415-456-4121 100 bayo vista way in san rafae. 
?                           ^^^^^^^^^^^^
+  you've searched business #h           100 bayo vista way in san rafae. 
?                           ^^^^^^^^^^^^

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_nlFractionTest_1" time="0.644">
		<error message="' you[39 chars]say  3/4  you can multiply the numerator and d[27 chars]er  ' != ' you[39 chars]say  #f   you can multiply the numerator and d[27 chars]er  '
-  you want to find equivalent fractions to  say  3/4  you can multiply the numerator and denominator by the same number  
?                                                 ^^^
+  you want to find equivalent fractions to  say  #f   you can multiply the numerator and denominator by the same number  
?                                                 ^^^
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 237, in test_nlFractionTest_1
    self.assertEqual(Actuval, expected)
AssertionError: ' you[39 chars]say  3/4  you can multiply the numerator and d[27 chars]er  ' != ' you[39 chars]say  #f   you can multiply the numerator and d[27 chars]er  '
-  you want to find equivalent fractions to  say  3/4  you can multiply the numerator and denominator by the same number  
?                                                 ^^^
+  you want to find equivalent fractions to  say  #f   you can multiply the numerator and denominator by the same number  
?                                                 ^^^

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_pFractionTest_1" time="0.666">
		<error message="' mix[15 chars]tly as 1 1/2. which is one and one half which is twenty five  ' != ' mix[15 chars]tly as 1 #f   which is one and one half which is twenty five  '
-  mixed numbers exactly as 1 1/2. which is one and one half which is twenty five  
?                             ^^^^
+  mixed numbers exactly as 1 #f   which is one and one half which is twenty five  
?                             ^^^^
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 163, in test_pFractionTest_1
    self.assertEqual(Actuval, expected)
AssertionError: ' mix[15 chars]tly as 1 1/2. which is one and one half which is twenty five  ' != ' mix[15 chars]tly as 1 #f   which is one and one half which is twenty five  '
-  mixed numbers exactly as 1 1/2. which is one and one half which is twenty five  
?                             ^^^^
+  mixed numbers exactly as 1 #f   which is one and one half which is twenty five  
?                             ^^^^

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_pFractionTest_2" time="0.632">
		<error message="' fractions as 3/4  which is three fourths or 3/ 100 whi[26 chars]hs. ' != ' fractions as #f   which is three fourths or 3/ 100 whi[26 chars]hs. '
-  fractions as 3/4  which is three fourths or 3/ 100 which is three one hundredreths. 
?               ^^^
+  fractions as #f   which is three fourths or 3/ 100 which is three one hundredreths. 
?               ^^^
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 169, in test_pFractionTest_2
    self.assertEqual(Actuval, expected)
AssertionError: ' fractions as 3/4  which is three fourths or 3/ 100 whi[26 chars]hs. ' != ' fractions as #f   which is three fourths or 3/ 100 whi[26 chars]hs. '
-  fractions as 3/4  which is three fourths or 3/ 100 which is three one hundredreths. 
?               ^^^
+  fractions as #f   which is three fourths or 3/ 100 which is three one hundredreths. 
?               ^^^

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_pFractionTest_3" time="1.275">
		<error message="'  up to # digits in length for each the numerator[26 chars]9   ' != '  up to 3 digits in length for each the numerator[26 chars]    '
-   up to # digits in length for each the numerators and denominators  456/789   
?         ^                                                            ^^^^^^^
+   up to 3 digits in length for each the numerators and denominators  #f        
?         ^                                                            ^^^^^^^
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 175, in test_pFractionTest_3
    self.assertEqual(Actuval, expected)
AssertionError: '  up to # digits in length for each the numerator[26 chars]9   ' != '  up to 3 digits in length for each the numerator[26 chars]    '
-   up to # digits in length for each the numerators and denominators  456/789   
?         ^                                                            ^^^^^^^
+   up to 3 digits in length for each the numerators and denominators  #f        
?         ^                                                            ^^^^^^^

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_pFractionTest_4" time="0.633">
		<error message="' for example  subtract #  1/4  from #  ' != ' for example  subtract 2  #f   from 1  '
-  for example  subtract #  1/4  from #  
?                         ^^^^^       ^
+  for example  subtract 2  #f   from 1  
?                        +++ ^^       ^
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 181, in test_pFractionTest_4
    self.assertEqual(Actuval, expected)
AssertionError: ' for example  subtract #  1/4  from #  ' != ' for example  subtract 2  #f   from 1  '
-  for example  subtract #  1/4  from #  
?                         ^^^^^       ^
+  for example  subtract 2  #f   from 1  
?                        +++ ^^       ^

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_pFractionTest_5" time="0.674">
		<error message="' for example  divide # 2/6  by #  ' != ' for example  divide 1 #f   by 2  '
-  for example  divide # 2/6  by #  
?                       ^^^^     ^
+  for example  divide 1 #f   by 2  
?                      ++ ^^     ^
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 187, in test_pFractionTest_5
    self.assertEqual(Actuval, expected)
AssertionError: ' for example  divide # 2/6  by #  ' != ' for example  divide 1 #f   by 2  '
-  for example  divide # 2/6  by #  
?                       ^^^^     ^
+  for example  divide 1 #f   by 2  
?                      ++ ^^     ^

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_pFractionTest_6" time="0.626">
		<error message="' this calculator also turns improper fractions into mixed numbers 5/2    #  ' != ' this calculator also turns improper fractions into mixed numbers #f     2  '
-  this calculator also turns improper fractions into mixed numbers 5/2    #  
?                                                                   ^^   -----
+  this calculator also turns improper fractions into mixed numbers #f     2  
?                                                                   ^^^^^^^
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 193, in test_pFractionTest_6
    self.assertEqual(Actuval, expected)
AssertionError: ' this calculator also turns improper fractions into mixed numbers 5/2    #  ' != ' this calculator also turns improper fractions into mixed numbers #f     2  '
-  this calculator also turns improper fractions into mixed numbers 5/2    #  
?                                                                   ^^   -----
+  this calculator also turns improper fractions into mixed numbers #f     2  
?                                                                   ^^^^^^^

]]>		</error>
	</testcase>
	<testcase classname="InequalityTest" name="test_pFractionTest_7" time="0.669">
		<error message="' enter any fraction  mixed number or intege for example  enter # 1/2 or #  ' != ' enter any fraction  mixed number or intege  for example  enter 1 #f   or 5  '
-  enter any fraction  mixed number or intege for example  enter # 1/2 or #  
?                                                                 ^^^^    ^
+  enter any fraction  mixed number or intege  for example  enter 1 #f   or 5  
?                                             +                   ++ ^^^    ^
" type="AssertionError">
<![CDATA[Traceback (most recent call last):
  File "C:/Users/CHRIS/PycharmProjects/Requests/Requests.py", line 199, in test_pFractionTest_7
    self.assertEqual(Actuval, expected)
AssertionError: ' enter any fraction  mixed number or intege for example  enter # 1/2 or #  ' != ' enter any fraction  mixed number or intege  for example  enter 1 #f   or 5  '
-  enter any fraction  mixed number or intege for example  enter # 1/2 or #  
?                                                                 ^^^^    ^
+  enter any fraction  mixed number or intege  for example  enter 1 #f   or 5  
?                                             +                   ++ ^^^    ^

]]>		</error>
	</testcase>
	<system-out>
<![CDATA[]]>	</system-out>
	<system-err>
<![CDATA[]]>	</system-err>
</testsuite>
